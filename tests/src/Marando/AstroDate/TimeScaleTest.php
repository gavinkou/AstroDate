<?php

namespace Marando\AstroDate;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2015-11-17 at 00:34:06.
 */
class TimeScaleTest extends \PHPUnit_Framework_TestCase {

  /**
   * @covers Marando\AstroDate\TimeScale::parse
   */
  public function testParse() {
    $tests = [
        ['TAI', TimeScale::TAI()],
        ['TDB', TimeScale::TDB()],
        ['TT', TimeScale::TT()],
        ['UT1', TimeScale::UT1()],
        ['UTC', TimeScale::UTC()],
    ];

    foreach ($tests as $t) {
      $abr = $t[0];
      $ts  = $t[1];

      $this->assertEquals($ts, TimeScale::parse($abr));
    }
  }

  /**
   * @covers Marando\AstroDate\TimeScale::UTC
   */
  public function testUTC() {
    $this->assertEquals('UTC', TimeScale::UTC()->abr);
  }

  /**
   * @covers Marando\AstroDate\TimeScale::TAI
   */
  public function testTAI() {
    $this->assertEquals('TAI', TimeScale::TAI()->abr);
  }

  /**
   * @covers Marando\AstroDate\TimeScale::TT
   */
  public function testTT() {
    $this->assertEquals('TT', TimeScale::TT()->abr);
  }

  /**
   * @covers Marando\AstroDate\TimeScale::UT1
   * @todo   Implement testUT1().
   */
  public function testUT1() {
    $this->assertEquals('UT1', TimeScale::UT1()->abr);
  }

  /**
   * @covers Marando\AstroDate\TimeScale::TDB
   */
  public function testTDB() {
    $this->assertEquals('TDB', TimeScale::TDB()->abr);
  }

  /**
   * @covers Marando\AstroDate\TimeScale::__toString
   */
  public function test__toString() {
    $this->assertEquals('UTC', (string)TimeScale::UTC());
  }

}
