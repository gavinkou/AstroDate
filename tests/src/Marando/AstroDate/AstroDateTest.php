<?php

namespace Marando\AstroDate;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2015-11-17 at 02:10:56.
 */
class AstroDateTest extends \PHPUnit_Framework_TestCase {

  /**
   * @covers Marando\AstroDate\AstroDate::jd
   */
  public function testJd() {
    $dates = [
        // Date                  // JD
        ['2000-Jan-01 00:00:00', 2451544.500000],
        ['2100-Oct-12 18:20:04', 2488354.263935],
        ['2089-Nov-08 21:14:18', 2484364.3849301],
    ];

    foreach ($dates as $d) {
      $fromJD = AstroDate::jd($d[1]);
      $toJd   = AstroDate::parse($d[0]);
      $this->assertEquals($toJd->toJD(), $fromJD->toJD(), "from JD $d[0]", 1e-4);
    }
  }

  /**
   * @covers Marando\AstroDate\AstroDate::mjd
   */
  public function testMjd() {
    $dates = [
        // Date                  // JD
        ['2000-Jan-01 00:00:00', 2451544.500000 - 2400000.5],
        ['2100-Oct-12 18:20:04', 2488354.263935 - 2400000.5],
        ['2089-Nov-08 21:14:18', 2484364.3849301 - 2400000.5],
    ];

    foreach ($dates as $d) {
      $fromMJD = AstroDate::mjd($d[1]);
      $toMJD   = AstroDate::parse($d[0]);
      $this->assertEquals($toMJD->toMJD(), $fromMJD->toMJD(), "from MJD $d[0]",
              1e-4);
    }
  }

  /**
   * @covers Marando\AstroDate\AstroDate::now
   * @todo   Implement testNow().
   */
  public function testNow() {
    // Remove the following lines when you implement this test.
    $this->markTestIncomplete(
            'This test has not been implemented yet.'
    );
  }

  /**
   * @covers Marando\AstroDate\AstroDate::parse
   * @todo   Implement testParse().
   */
  public function testParse() {
    $dates = [
        ['2015-1-10 10:34:16', 2015, 1, 10, 10, 34, 16],
        ['2015-1-10 10:34:16 PST', 2015, 1, 10, 10, 34, 16, TimeZone::name('PST')],
        ['2015-Feb-19 03:10', 2015, 2, 19, 3, 10, 0],
        ['2015-Feb-19 03:10 EST', 2015, 2, 19, 3, 10, 0, TimeZone::name('EST')],
    ];
    foreach ($dates as $d) {
      $date = AstroDate::parse($d[0]);
      $this->assertEquals($d[1], $date->year, 'year');
      $this->assertEquals($d[2], $date->month, 'month');
      $this->assertEquals($d[3], $date->day, 'day');
      $this->assertEquals($d[4], $date->hour, 'hour');
      $this->assertEquals($d[5], $date->min, 'min');
      $this->assertEquals($d[6], $date->sec, 'sec');

      if (count($d) > 7)
        $this->assertEquals($d[7], $date->timezone, 'timezone');
    }
  }

  /**
   * @covers Marando\AstroDate\AstroDate::setDate
   * @todo   Implement testSetDate().
   */
  public function testSetDate() {
    // Remove the following lines when you implement this test.
    $this->markTestIncomplete(
            'This test has not been implemented yet.'
    );
  }

  /**
   * @covers Marando\AstroDate\AstroDate::setTime
   * @todo   Implement testSetTime().
   */
  public function testSetTime() {
    // Remove the following lines when you implement this test.
    $this->markTestIncomplete(
            'This test has not been implemented yet.'
    );
  }

  /**
   * @covers Marando\AstroDate\AstroDate::setDateTime
   * @todo   Implement testSetDateTime().
   */
  public function testSetDateTime() {
    // Remove the following lines when you implement this test.
    $this->markTestIncomplete(
            'This test has not been implemented yet.'
    );
  }

  /**
   * @covers Marando\AstroDate\AstroDate::setTimezone
   * @todo   Implement testSetTimezone().
   */
  public function testSetTimezone() {
    // Remove the following lines when you implement this test.
    $this->markTestIncomplete(
            'This test has not been implemented yet.'
    );
  }

  /**
   * @covers Marando\AstroDate\AstroDate::toJD
   * @todo   Implement testToJD().
   */
  public function testToJD() {
    // Remove the following lines when you implement this test.
    $this->markTestIncomplete(
            'This test has not been implemented yet.'
    );
  }

  /**
   * @covers Marando\AstroDate\AstroDate::toMJD
   * @todo   Implement testToMJD().
   */
  public function testToMJD() {
    // Remove the following lines when you implement this test.
    $this->markTestIncomplete(
            'This test has not been implemented yet.'
    );
  }

  /**
   * @covers Marando\AstroDate\AstroDate::add
   * @todo   Implement testAdd().
   */
  public function testAdd() {
    // Remove the following lines when you implement this test.
    $this->markTestIncomplete(
            'This test has not been implemented yet.'
    );
  }

  /**
   * @covers Marando\AstroDate\AstroDate::sub
   * @todo   Implement testSub().
   */
  public function testSub() {
    // Remove the following lines when you implement this test.
    $this->markTestIncomplete(
            'This test has not been implemented yet.'
    );
  }

  /**
   * @covers Marando\AstroDate\AstroDate::toUTC
   * @todo   Implement testToUTC().
   */
  public function testToUTC() {
    // Remove the following lines when you implement this test.
    $this->markTestIncomplete(
            'This test has not been implemented yet.'
    );
  }

  /**
   * @covers Marando\AstroDate\AstroDate::toTAI
   * @todo   Implement testToTAI().
   */
  public function testToTAI() {
    // Remove the following lines when you implement this test.
    $this->markTestIncomplete(
            'This test has not been implemented yet.'
    );
  }

  /**
   * @covers Marando\AstroDate\AstroDate::toTT
   * @todo   Implement testToTT().
   */
  public function testToTT() {
    // Remove the following lines when you implement this test.
    $this->markTestIncomplete(
            'This test has not been implemented yet.'
    );
  }

  /**
   * @covers Marando\AstroDate\AstroDate::toUT1
   * @todo   Implement testToUT1().
   */
  public function testToUT1() {
    // Remove the following lines when you implement this test.
    $this->markTestIncomplete(
            'This test has not been implemented yet.'
    );
  }

  /**
   * @covers Marando\AstroDate\AstroDate::toTDB
   * @todo   Implement testToTDB().
   */
  public function testToTDB() {
    // Remove the following lines when you implement this test.
    $this->markTestIncomplete(
            'This test has not been implemented yet.'
    );
  }

  /**
   * @covers Marando\AstroDate\AstroDate::monthName
   * @todo   Implement testMonthName().
   */
  public function testMonthName() {
    // Remove the following lines when you implement this test.
    $this->markTestIncomplete(
            'This test has not been implemented yet.'
    );
  }

  /**
   * @covers Marando\AstroDate\AstroDate::format
   * @todo   Implement testFormat().
   */
  public function testFormat() {
    // Remove the following lines when you implement this test.
    $this->markTestIncomplete(
            'This test has not been implemented yet.'
    );
  }

  /**
   * @covers Marando\AstroDate\AstroDate::isLeapYear
   * @todo   Implement testIsLeapYear().
   */
  public function testIsLeapYear() {
    // Remove the following lines when you implement this test.
    $this->markTestIncomplete(
            'This test has not been implemented yet.'
    );
  }

  /**
   * @covers Marando\AstroDate\AstroDate::dayName
   * @todo   Implement testDayName().
   */
  public function testDayName() {
    // Remove the following lines when you implement this test.
    $this->markTestIncomplete(
            'This test has not been implemented yet.'
    );
  }

  /**
   * @covers Marando\AstroDate\AstroDate::diff
   * @todo   Implement testDiff().
   */
  public function testDiff() {
    // Remove the following lines when you implement this test.
    $this->markTestIncomplete(
            'This test has not been implemented yet.'
    );
  }

  /**
   * @covers Marando\AstroDate\AstroDate::toEpoch
   * @todo   Implement testToEpoch().
   */
  public function testToEpoch() {
    // Remove the following lines when you implement this test.
    $this->markTestIncomplete(
            'This test has not been implemented yet.'
    );
  }

  /**
   * @covers Marando\AstroDate\AstroDate::dayOfYear
   * @todo   Implement testDayOfYear().
   */
  public function testDayOfYear() {
    // Remove the following lines when you implement this test.
    $this->markTestIncomplete(
            'This test has not been implemented yet.'
    );
  }

  /**
   * @covers Marando\AstroDate\AstroDate::sidereal
   * @todo   Implement testSidereal().
   */
  public function testSidereal() {
    // Remove the following lines when you implement this test.
    $this->markTestIncomplete(
            'This test has not been implemented yet.'
    );
  }

  /**
   * @covers Marando\AstroDate\AstroDate::sinceMidnight
   * @todo   Implement testSinceMidnight().
   */
  public function testSinceMidnight() {
    // Remove the following lines when you implement this test.
    $this->markTestIncomplete(
            'This test has not been implemented yet.'
    );
  }

  /**
   * @covers Marando\AstroDate\AstroDate::untilMidnight
   * @todo   Implement testUntilMidnight().
   */
  public function testUntilMidnight() {
    // Remove the following lines when you implement this test.
    $this->markTestIncomplete(
            'This test has not been implemented yet.'
    );
  }

  /**
   * @covers Marando\AstroDate\AstroDate::__toString
   * @todo   Implement test__toString().
   */
  public function test__toString() {
    // Remove the following lines when you implement this test.
    $this->markTestIncomplete(
            'This test has not been implemented yet.'
    );
  }

}
